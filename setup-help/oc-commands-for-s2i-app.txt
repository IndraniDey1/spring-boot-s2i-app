oc-commands-for-s2i-app.txt

odo commands:
odo login url -u username -p password
odo project create some-project-name ( this will create a project in openshift)
odo create java ( since this is a java project, if nodejs project then do oc create nodejs )
odo push
odo url create --port 8080
odo push
odo url list
curl url



oc create -f configmap.yml
oc set env dc/s2i-app --from configmap/s2i-cm
oc set env dc/spring-boot-s2i-app-from-git --from configmap/s2i-cm

oc create -f secrets.yml
oc set env dc/spring-boot-s2i-app-from-git --from secret/s2i-sec

oc rollout latest dc/s2i-app
--------------------cleanup---------------------------------------
oc adm policy add-role-to-user admin developer -n chairside-notification-service


oc delete all --selector app=simple-spring-boot-s2i-app
Docker:
docker imagee prune
docker container stop 77e5db0cc0bf
docker container prune 5994cdde5a0f
--------------------- pulling image from registry --------------

docker pull registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift

--------------------configmap.yml---------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: s2i-cm
  namespace: fmc-demo-template-1
data:
  spring.datasource.driver.class.name: com.mysql.jdbc.Driver
  spring.datasource.url: jdbc:mysql://mysql:3306/bookstore?noSSL=trueuse&LegacyDatetimeCode=false&serverTimezone=UTC
  spring.datasource.tomcat.max-wait:  "20000"
  spring.datasource.tomcat.max-active: "50"
  spring.datasource.tomcat.max-idle: "20"
  spring.datasource.tomcat.min-idle: "15"
  spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQLDialect
  spring.jpa.properties.hibernate.id.new_generator_mappings: "false"
  spring.jpa.properties.hibernate.format_sql: "true"

  logging.level.org.hibernate.SQL: DEBUG
  logging.level.org.hibernate.type.descriptor.sql.BasicBinder: TRACE

  cat-fact.url: https://cat-fact.herokuapp.com/facts
-------------------secrets.yml----------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: s2i-sec 
  type: Opaque
data:
  spring.datasource.username: dXNlcjE= 
  spring.datasource.password: cGFzc3dvcmQ=
-----------------------------------------------------------------------------------------------------
TROUBLESHOOTING:
-----------------------------------------------------------------------------------------------------
troubleshooting for BAD GATEWAY
solution: had to change svc and then had to delete route

oc edit svc/s2i-app.  [ changed the target port from 8778 to 8080]

oc delete route s2i-app

oc expose svc/s2i-app

oc get route

[saw that 8080-tcp showed up, then access the route and no more BAD GATEWAY]
---------------------------------------------------------------

oc adm policy add-role-to-user <role> <user> -n <project>

oc adm policy add-role-to-user admin alice -n joe

oc create secret generic <secret_name> \
    --from-literal=username=<user_name> \
    --from-literal=password=<password> \
    --type=kubernetes.io/basic-auth
